// <auto-generated />
using System;
using FlightService.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightService.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20230330061314_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightService.Model.Airport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityID")
                        .HasColumnType("bigint");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("FlightService.Model.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AirportDepartureId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AirportDestinationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TicketPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AirportDepartureId");

                    b.HasIndex("AirportDestinationId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightService.Model.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AirportId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturning")
                        .HasColumnType("bit");

                    b.Property<long?>("OneWayFlightId")
                        .HasColumnType("bigint");

                    b.Property<long>("PassengerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReturningFlightId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.HasIndex("OneWayFlightId");

                    b.HasIndex("ReturningFlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("FlightService.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlightService.Model.Flight", b =>
                {
                    b.HasOne("FlightService.Model.Airport", "AirportDeparture")
                        .WithMany()
                        .HasForeignKey("AirportDepartureId");

                    b.HasOne("FlightService.Model.Airport", "AirportDestination")
                        .WithMany()
                        .HasForeignKey("AirportDestinationId");

                    b.Navigation("AirportDeparture");

                    b.Navigation("AirportDestination");
                });

            modelBuilder.Entity("FlightService.Model.Ticket", b =>
                {
                    b.HasOne("FlightService.Model.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId");

                    b.HasOne("FlightService.Model.Flight", "OneWayFlight")
                        .WithMany()
                        .HasForeignKey("OneWayFlightId");

                    b.HasOne("FlightService.Model.Flight", "ReturningFlight")
                        .WithMany()
                        .HasForeignKey("ReturningFlightId");

                    b.Navigation("Airport");

                    b.Navigation("OneWayFlight");

                    b.Navigation("ReturningFlight");
                });
#pragma warning restore 612, 618
        }
    }
}
